{"version":3,"sources":["images/logo.svg","components/Header.js","components/NewTask.js","images/trash.svg","components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","NewTask","onSave","onCancel","useState","task","setTask","useEffect","type","onChange","e","title","target","value","description","onClick","Task","checked","handleDelete","handleChek","trash","INITIAL_STATE","id","App","tasksList","setTasksList","createNew","setCreateNew","length","totalCount","setTotalCount","filter","doneCount","setDoneCount","console","log","Math","max","map","t","newTask","slice","reverse","newTasksList","handleCkeck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b8827d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"../../src/images/logo.svg\";\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <h1>To do app</h1>\n  </header>\n);\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\n\nconst NewTask = ({ onSave, onCancel }) => {\n  const [task, setTask] = useState({});\n\n  useEffect(() => {\n    setTask({});\n  }, []);\n\n  return (\n    <div className=\"newTask\">\n      <h2 className=\"title\">New task</h2>\n      <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          onChange={(e) => setTask({ ...task, title: e.target.value })}\n          value={task.title}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          className=\"form-control\"\n          onChange={(e) => setTask({ ...task, description: e.target.value })}\n        >\n          {task.description}\n        </textarea>\n      </div>\n      <button className=\"button\" onClick={() => onSave(task)}>\n        Save\n      </button>\n      <button className=\"button cancel\" onClick={onCancel}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nexport default NewTask;\n","export default __webpack_public_path__ + \"static/media/trash.3f1a5ad2.svg\";","import React from \"react\";\nimport trash from \"../../src/images/trash.svg\";\n\nconst Task = ({ title, description, checked, handleDelete, handleChek }) => {\n  // const handleEdit = () => {};\n  return (\n    <div className=\"task\">\n      <div onClick={handleChek}>\n        <input\n          onChange={handleChek}\n          type=\"checkbox\"\n          checked={checked ? \"checked\" : \"\"}\n        />\n        <div className=\"details\">\n          <h3>{title}</h3>\n          <p>{description}</p>\n        </div>\n      </div>\n      <button onClick={handleDelete}>\n        <img src={trash} className=\"delete\" alt=\"delete\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Task;\n","import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport NewTask from \"./components/NewTask\";\nimport Task from \"./components/Task\";\nimport \"./App.css\";\n\nconst INITIAL_STATE = [\n  {\n    id: 1,\n    title: \"Sacar al perro\",\n    description: \"Dos veces al día\",\n    checked: true,\n  },\n  {\n    id: 2,\n    title: \"Darle de comer al perro\",\n    description: \"Una vez al día\",\n    checked: false,\n  },\n  {\n    id: 3,\n    title: \"Lavar al auto\",\n    description: \"Cada quince días\",\n    checked: false,\n  },\n  {\n    id: 4,\n    title: \"Hacer ejercicios de NT2\",\n    description: \"Cuando se pueda\",\n    checked: false,\n  },\n];\n\nfunction App() {\n  const [tasksList, setTasksList] = useState(INITIAL_STATE);\n  const [createNew, setCreateNew] = useState(false);\n  const [totalCount, setTotalCount] = useState(() => tasksList.length);\n  const [doneCount, setDoneCount] = useState(\n    () => tasksList.filter((task) => task.checked === true).length\n  );\n  console.log(tasksList);\n\n  const handleNewTask = () => {\n    setCreateNew(true);\n  };\n  const handleCancel = () => {\n    setCreateNew(false);\n  };\n  const handleSave = (task) => {\n    const { title, description } = task;\n    if (title || description) {\n      const id =\n        tasksList.length > 0 ? Math.max(...tasksList.map((t) => t.id)) + 1 : 1;\n      const newTask = {\n        id: id,\n        ...task,\n        checked: false,\n      };\n      setTasksList([...tasksList, newTask]);\n    }\n    setCreateNew(false);\n  };\n  const handleCkeck = (id) => {\n    const newTasksList = tasksList.map((task) => {\n      if (task.id === id) {\n        const updatedTask = {\n          ...task,\n          checked: !task.checked,\n        };\n        return updatedTask;\n      }\n      return task;\n    });\n\n    setTasksList(newTasksList);\n  };\n  const handleDeleteTask = (id) => {\n    setTasksList(tasksList.filter((task) => task.id !== id));\n  };\n\n  useEffect(() => {\n    setTotalCount(tasksList.length);\n    setDoneCount(tasksList.filter((task) => task.checked === true).length);\n  }, [tasksList]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        {createNew ? (\n          <NewTask onSave={handleSave} onCancel={handleCancel} />\n        ) : (\n          <div className=\"count-container\">\n            <h3>\n              Total tasks: <b>{totalCount}</b>\n            </h3>\n            <button className=\"button\" onClick={handleNewTask}>\n              Add new task\n            </button>\n            <h3>\n              Completed tasks: <b>{doneCount}</b>\n            </h3>\n          </div>\n        )}\n        <div className=\"container\">\n          {tasksList.length > 0 ? (\n            <>\n              <h2 className=\"title\">My tasks</h2>\n              {tasksList\n                .slice(0)\n                .reverse()\n                .map((task) => (\n                  <Task\n                    key={task.id}\n                    id={task.id}\n                    title={task.title}\n                    description={task.description}\n                    checked={task.checked}\n                    handleChek={() => handleCkeck(task.id)}\n                    handleDelete={() => handleDeleteTask(task.id)}\n                  />\n                ))}\n            </>\n          ) : (\n            !createNew && <h2 className=\"title\">Please, create a task</h2>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}