{"version":3,"sources":["images/logo.svg","components/Header.js","components/NewTask.js","images/trash.svg","images/edit.svg","components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","NewTask","onSave","onCancel","taskToEdit","useState","task","setTask","type","onChange","e","title","target","value","defaultValue","description","onClick","Task","checked","handleDelete","handleChek","handleEdit","edit","trash","INITIAL_STATE","id","App","tasksList","setTasksList","newTasks","setNewTasks","createNew","setCreateNew","length","totalCount","setTotalCount","filter","doneCount","setDoneCount","useEffect","newTasksList","map","oldTask","Math","max","t","newTask","slice","reverse","handleCkeck","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.099d3782.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"../../src/images/logo.svg\";\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <h1>To do app</h1>\n  </header>\n);\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nconst NewTask = ({ onSave, onCancel, taskToEdit }) => {\n  const [task, setTask] = useState(taskToEdit);\n\n  return (\n    <div className=\"newTask\">\n      <h2 className=\"title\">New task</h2>\n      <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          onChange={(e) => setTask({ ...task, title: e.target.value })}\n          value={task.title ? task.title : \"\"}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          className=\"form-control\"\n          defaultValue={task.description ? task.description : \"\"}\n          onChange={(e) => setTask({ ...task, description: e.target.value })}\n        />\n      </div>\n      <button className=\"button\" onClick={() => onSave(task)}>\n        Save\n      </button>\n      <button className=\"button cancel\" onClick={onCancel}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n\nexport default NewTask;\n","export default __webpack_public_path__ + \"static/media/trash.3f1a5ad2.svg\";","export default __webpack_public_path__ + \"static/media/edit.005b5637.svg\";","import React from \"react\";\nimport trash from \"../../src/images/trash.svg\";\nimport edit from \"../../src/images/edit.svg\";\n\nconst Task = ({\n  title,\n  description,\n  checked,\n  handleDelete,\n  handleChek,\n  handleEdit,\n}) => {\n  // const handleEdit = () => {};\n  return (\n    <div className=\"task\">\n      <div onClick={handleChek}>\n        <input\n          onChange={handleChek}\n          type=\"checkbox\"\n          checked={checked ? \"checked\" : \"\"}\n        />\n        <div className=\"details\">\n          <h3>{title}</h3>\n          <p>{description}</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={handleEdit} title=\"edit\">\n          <img src={edit} className=\"icon\" alt=\"edit\" />\n        </button>\n        <button onClick={handleDelete} title=\"delete\">\n          <img src={trash} className=\"icon\" alt=\"delete\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport NewTask from \"./components/NewTask\";\nimport Task from \"./components/Task\";\nimport \"./App.css\";\n\nconst INITIAL_STATE = [\n  {\n    id: 1,\n    title: \"Sacar al perro\",\n    description: \"Dos veces al día\",\n    checked: true,\n  },\n  {\n    id: 2,\n    title: \"Darle de comer al perro\",\n    description: \"Una vez al día\",\n    checked: false,\n  },\n  {\n    id: 3,\n    title: \"Lavar al auto\",\n    description: \"Cada quince días\",\n    checked: false,\n  },\n  {\n    id: 4,\n    title: \"Hacer ejercicios de NT2\",\n    description: \"Cuando se pueda\",\n    checked: false,\n  },\n];\n\nfunction App() {\n  const [tasksList, setTasksList] = useState(INITIAL_STATE);\n  const [newTasks, setNewTasks] = useState({});\n  const [createNew, setCreateNew] = useState(false);\n  const [totalCount, setTotalCount] = useState(() => tasksList.length);\n  const [doneCount, setDoneCount] = useState(\n    () => tasksList.filter((task) => task.checked === true).length\n  );\n\n  const handleNewTask = () => {\n    setCreateNew(true);\n  };\n  const handleCancel = () => {\n    setCreateNew(false);\n    setNewTasks({});\n  };\n  const handleSave = (task) => {\n    const { title, description, id } = task;\n    if (id) {\n      const newTasksList = tasksList.map((oldTask) => {\n        if (oldTask.id === id) {\n          const updatedTask = {\n            ...oldTask,\n            title,\n            description,\n          };\n          return updatedTask;\n        }\n        return oldTask;\n      });\n\n      setTasksList(newTasksList);\n    } else {\n      const id =\n        tasksList.length > 0 ? Math.max(...tasksList.map((t) => t.id)) + 1 : 1;\n      const newTask = {\n        id: id,\n        ...task,\n        checked: false,\n      };\n      setTasksList([...tasksList, newTask]);\n    }\n    setCreateNew(false);\n    setNewTasks({});\n  };\n  const handleCkeck = (id) => {\n    const newTasksList = tasksList.map((task) => {\n      if (task.id === id) {\n        const updatedTask = {\n          ...task,\n          checked: !task.checked,\n        };\n        return updatedTask;\n      }\n      return task;\n    });\n\n    setTasksList(newTasksList);\n  };\n  const handleDeleteTask = (id) => {\n    setTasksList(tasksList.filter((task) => task.id !== id));\n  };\n  const handleEditTask = (id) => {\n    setNewTasks(tasksList.find((task) => task.id === id));\n    setCreateNew(true);\n  };\n\n  useEffect(() => {\n    setTotalCount(tasksList.length);\n    setDoneCount(tasksList.filter((task) => task.checked === true).length);\n  }, [tasksList]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        {createNew ? (\n          <NewTask\n            taskToEdit={newTasks}\n            onSave={handleSave}\n            onCancel={handleCancel}\n          />\n        ) : (\n          <div className=\"count-container\">\n            <h3>\n              Total tasks: <b>{totalCount}</b>\n            </h3>\n            <button className=\"button\" onClick={handleNewTask}>\n              Add new task\n            </button>\n            <h3>\n              Completed tasks: <b>{doneCount}</b>\n            </h3>\n          </div>\n        )}\n        <div className=\"container\">\n          {tasksList.length > 0 ? (\n            <>\n              <h2 className=\"title\">My tasks</h2>\n              {tasksList\n                .slice(0)\n                .reverse()\n                .map((task) => (\n                  <Task\n                    key={task.id}\n                    id={task.id}\n                    title={task.title}\n                    description={task.description}\n                    checked={task.checked}\n                    handleChek={() => handleCkeck(task.id)}\n                    handleEdit={() => handleEditTask(task.id)}\n                    handleDelete={() => handleDeleteTask(task.id)}\n                  />\n                ))}\n            </>\n          ) : (\n            !createNew && <h2 className=\"title\">Please, create a task</h2>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}